{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Uc/2021-1/Taller de Integracion/t1-integracion-naazocar/src/components/BCS.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'; //borrar\n\nimport BCSCard from './BCSCard';\nimport '../styles/Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n\n  const [BCSList, setBCSList] = useState([]);\n  useEffect(() => {\n    axios.get('https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=Better+Call+Saul').then(response => {\n      console.log(response.data);\n      setBCSList(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  var seasons = [];\n\n  for (var key in BCSList) {\n    if (seasons.includes(parseInt(BCSList[key].season))) {// pass\n    } else {\n      seasons.push(parseInt(BCSList[key].season));\n    }\n  }\n\n  var chaptersPerSeason = {};\n\n  for (var season in seasons) {\n    chaptersPerSeason[seasons[season]] = {};\n  }\n\n  for (var key2 in BCSList) {\n    for (var season2 in chaptersPerSeason) {\n      if (BCSList[key2].season === season2) {\n        chaptersPerSeason[season2][BBList[key2].episode] = BBList[key2];\n      }\n    }\n  }\n\n  console.log(chaptersPerSeason);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"seasons-container\",\n    children: seasons.map((value, id) => {\n      return /*#__PURE__*/_jsxDEV(BCSCard, {\n        value: value,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Series, \"nS8yLqK+Z4+epFx8+yOMqZ1n498=\");\n\n_c = Series;\n\nvar _c;\n\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"sources":["/Users/nico/Uc/2021-1/Taller de Integracion/t1-integracion-naazocar/src/components/BCS.js"],"names":["axios","React","useEffect","useState","BCSCard","Series","BCSList","setBCSList","get","then","response","console","log","data","catch","err","seasons","key","includes","parseInt","season","push","chaptersPerSeason","key2","season2","BBList","episode","map","value","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAAoD;;AACpD,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BJ,QAAQ,CAAE,EAAF,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CACAQ,GADL,CACS,iFADT,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,UAAU,CAACG,QAAQ,CAACG,IAAV,CAAV;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,GAAT,IAAgBX,OAAhB,EAAyB;AACrB,QAAIU,OAAO,CAACE,QAAR,CAAiBC,QAAQ,CAACb,OAAO,CAACW,GAAD,CAAP,CAAaG,MAAd,CAAzB,CAAJ,EAAqD,CACjD;AACH,KAFD,MAEO;AACHJ,MAAAA,OAAO,CAACK,IAAR,CAAaF,QAAQ,CAACb,OAAO,CAACW,GAAD,CAAP,CAAaG,MAAd,CAArB;AACH;AACJ;;AAED,MAAIE,iBAAiB,GAAG,EAAxB;;AACA,OAAK,IAAIF,MAAT,IAAmBJ,OAAnB,EAA4B;AACxBM,IAAAA,iBAAiB,CAACN,OAAO,CAACI,MAAD,CAAR,CAAjB,GAAqC,EAArC;AACH;;AAED,OAAK,IAAIG,IAAT,IAAiBjB,OAAjB,EAA0B;AACtB,SAAK,IAAIkB,OAAT,IAAoBF,iBAApB,EAAuC;AACnC,UAAIhB,OAAO,CAACiB,IAAD,CAAP,CAAcH,MAAd,KAAyBI,OAA7B,EAAsC;AAClCF,QAAAA,iBAAiB,CAACE,OAAD,CAAjB,CAA2BC,MAAM,CAACF,IAAD,CAAN,CAAaG,OAAxC,IAAmDD,MAAM,CAACF,IAAD,CAAzD;AACH;AACJ;AACJ;;AAEDZ,EAAAA,OAAO,CAACC,GAAR,CAAYU,iBAAZ;AAEA,sBACI;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA,cACKN,OAAO,CAACW,GAAR,CAAY,CAACC,KAAD,EAAQC,EAAR,KAAe;AACxB,0BAAO,QAAC,OAAD;AAAS,QAAA,KAAK,EAAED,KAAhB;AAAuB,QAAA,EAAE,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7CuBxB,M;;KAAAA,M","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'; //borrar\nimport BCSCard from './BCSCard';\nimport '../styles/Series.css';\n\nexport default function Series() {\n    const [ BCSList, setBCSList ] = useState ([]);\n    useEffect(() => {\n        axios\n            .get('https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=Better+Call+Saul')\n            .then(response => {\n                console.log(response.data);\n                setBCSList(response.data);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n    \n    var seasons = [];\n    for (var key in BCSList) {\n        if (seasons.includes(parseInt(BCSList[key].season))) {\n            // pass\n        } else {\n            seasons.push(parseInt(BCSList[key].season))\n        } \n    }\n\n    var chaptersPerSeason = {};\n    for (var season in seasons) {\n        chaptersPerSeason[seasons[season]] = {}\n    }\n\n    for (var key2 in BCSList) {\n        for (var season2 in chaptersPerSeason) {\n            if (BCSList[key2].season === season2) {\n                chaptersPerSeason[season2][BBList[key2].episode] = BBList[key2]\n            } \n        }\n    }\n\n    console.log(chaptersPerSeason);\n\n    return(\n        <section className='seasons-container'>\n            {seasons.map((value, id) => {\n                return <BCSCard value={value} id={id} />\n            })}\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}